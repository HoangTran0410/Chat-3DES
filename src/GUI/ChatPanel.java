/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import java.io.BufferedReader;
import java.io.DataOutputStream;
import java.io.IOException;
import java.io.InputStreamReader;
import java.net.Socket;

/**
 *
 * @author Hoang Tran < hoang at 99.hoangtran@gmail.com >
 */
public class ChatPanel extends javax.swing.JPanel implements Runnable {

    Socket socket;
    String sender, receiver;
    BufferedReader bf;
    DataOutputStream os;

    /**
     * Creates new form ChatPanel
     *
     * @param s - client's socket
     * @param sender - sender name
     * @param receiver - receiver name
     */
    public ChatPanel(Socket s, String sender, String receiver) {
        try {
            initComponents();

            //Truyền socket
            socket = s;

            //Nhận tên người gửi và người nhận
            this.sender = sender;
            this.receiver = receiver;

            //Tạo các bộ đệm để gửi và nhận tin nhắn
            bf = new BufferedReader(new InputStreamReader(socket.getInputStream()));
            os = new DataOutputStream(socket.getOutputStream());
        } catch (IOException e) {
            System.out.println("Error while create Main Panel." + e.getMessage());
        }
    }

    public void send(String msg) {
        try {
            os.writeBytes(msg);
            os.write(13);
            os.write(10);
            os.flush();
        } catch (IOException ex) {
            System.out.println("Error while sendding messeger. " + ex.getMessage());
        }
    }

    //Một phương thức run được implement từ lớp Runable với mục đích kiểm tra tin nhắn đến
    @Override
    public void run() {
        while (true) {
            try {
                if (socket != null) {
                    String msg;
                    while ((msg = bf.readLine()) != null) {
                        //Nếu có tin nhắn đến thì ghi vào lịch sử
                        txMsgHistory.append("\n" + receiver + ": " + msg);
                    }
                }
            } catch (IOException e) {
                // Do not change this because it spawn try-catch many time while running thread!
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txMsg = new javax.swing.JTextField();
        btnSend = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        txMsgHistory = new javax.swing.JTextArea();

        txMsg.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        txMsg.setText("Enter message here...");
        txMsg.setToolTipText("");

        btnSend.setFont(new java.awt.Font("Dialog", 1, 20)); // NOI18N
        btnSend.setText("Send");
        btnSend.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSendActionPerformed(evt);
            }
        });

        txMsgHistory.setColumns(20);
        txMsgHistory.setRows(5);
        jScrollPane1.setViewportView(txMsgHistory);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txMsg, javax.swing.GroupLayout.PREFERRED_SIZE, 473, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSend, javax.swing.GroupLayout.DEFAULT_SIZE, 109, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnSend, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txMsg))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnSendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSendActionPerformed
        // Kiểm tra xem người dùng nhập tin nhắn hay chưa
        if (txMsg.getText().isEmpty()) {
            return;
        }

        try {
            // Ghi dữ liệu từ ô nhập tin nhắn vào "bộ đệm của của socket"
            // để sau này chúng ta có thể lấy dữ liệu này từ server
            os.writeBytes(txMsg.getText());

            // Xuống Dòng + Xóa bộ đệm
            os.write(13);
            os.write(10);
            os.flush();

            // Ghi dữ liệu vào textArea ở phía trên
            txMsgHistory.append("\n" + sender + ": " + txMsg.getText());

            // Xóa hết tin nhắn tại ô nhập tin nhắn
            txMsg.setText("");
        } catch (IOException e) {
            System.out.println("Error while sendding messeger. " + e.getMessage());
        }
    }//GEN-LAST:event_btnSendActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSend;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField txMsg;
    private javax.swing.JTextArea txMsgHistory;
    // End of variables declaration//GEN-END:variables
}
